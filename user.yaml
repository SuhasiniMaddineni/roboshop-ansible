- name: create user
  hosts: user
  become: yes
  tasks: 
  - name: disable old nodejs & enable nodejs
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y 

  - name: install nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: present  

  - name: create user
    ansible.builtin.user: 
      name: roboshop 

  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: downloading user application
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/user.zip
      dest: /tmp

  - name: unzip the user application
    ansible.builtin.unarchive:
      src: /tmp/user.zip
      dest: /app
      remote_src: yes     

  - name: install dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: copy user service
    ansible.builtin.copy:
      src: /home/centos/roboshop-ansible/user.service
      dest: /etc/systemd/system/user.service   

  - name: reload the service
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: enable & start user
    ansible.builtin.service:
      name: user
      state: started
      enabled: yes      

  - name: setup mongo repo to instal mngodb client
    ansible.builtin.copy:
      src: /home/centos/roboshop-ansible/mongo.repo
      dest: /etc/yum.repos.d/mongo.repo        

  - name: install mongodb shell
    ansible.builtin.package:
      name: mongodb-org-shell
      state: present   

  - name: get the users count
    ansible.builtin.command:  mongo --host mongodb.daws91.online --quiet --eval 'db = db.getSiblingDB("users"); db.users.count()'
    register: product_count      

  - name: load users data
    ansible.builtin.command: mongo --host mongodb.daws91.online < /app/schema/user.js
    when: product_count.stdout == "0" # keep double quotes  

  - name: start and enable user
    ansible.builtin.service:
      name: user
      state: restarted
      enabled: yes   